2025-07-18 16:00:08.663 | INFO     | __main__:run:400 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:01:38.544 | INFO     | __main__:run:400 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:01:38.545 | INFO     | __main__:run:469 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:02:28.526 | INFO     | __main__:run:400 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:02:28.527 | INFO     | __main__:run:469 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:04:31.516 | INFO     | __main__:run:400 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:04:31.516 | INFO     | __main__:run:469 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:04:31.531 | INFO     | __main__:run:482 - [Agent] 构建 DAG 完成
2025-07-18 16:04:31.531 | INFO     | __main__:execute_dag:355 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'final_content': None, 'chart': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:04:31.531 | INFO     | __main__:execute_dag:358 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:04:31.544 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:04:31.544 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:04:32.045 | INFO     | __main__:node_fn:304 - [动态节点:outline_generator] 返回: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:04:32.046 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:04:32.046 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:04:32.347 | INFO     | __main__:node_fn:304 - [动态节点:outline_splitter] 返回: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:04:32.348 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:04:32.348 | ERROR    | __main__:node_fn:307 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:04:32.349 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:04:32.349 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:04:32.751 | INFO     | __main__:node_fn:304 - [动态节点:chart_generator] 返回: {'_globals': {'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:04:32.753 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:04:32.753 | INFO     | __main__:node_fn:237 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:04:32.753 | INFO     | __main__:node_fn:255 - [动态节点:GLUE] 返回: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:04:32.754 | INFO     | __main__:execute_dag:367 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:04:32.755 | INFO     | __main__:execute_dag:368 - [execute_dag] DAG 执行耗时: 1.22 秒
2025-07-18 16:04:32.756 | INFO     | __main__:run:489 - [Agent] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:04:32.756 | INFO     | __main__:run:490 - [Agent] DAG 执行耗时: 1.22 秒
2025-07-18 16:04:32.756 | INFO     | __main__:run:493 - [Agent] 总耗时: 1.24 秒
2025-07-18 16:04:32.756 | INFO     | __main__:output_result:378 - [output_result] 最终产物: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:05:16.598 | INFO     | __main__:run:400 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:05:16.598 | INFO     | __main__:run:469 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:05:16.611 | INFO     | __main__:run:482 - [Agent] 构建 DAG 完成
2025-07-18 16:05:16.611 | INFO     | __main__:execute_dag:355 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:05:16.611 | INFO     | __main__:execute_dag:358 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:05:16.616 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:05:16.616 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:05:17.118 | INFO     | __main__:node_fn:304 - [动态节点:outline_generator] 返回: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:05:17.120 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:05:17.120 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:05:17.422 | INFO     | __main__:node_fn:304 - [动态节点:outline_splitter] 返回: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:05:17.424 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'content_parts': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:05:17.424 | ERROR    | __main__:node_fn:307 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:05:17.425 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:05:17.425 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:05:17.827 | INFO     | __main__:node_fn:304 - [动态节点:chart_generator] 返回: {'_globals': {'final_content': None, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:05:17.831 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'final_content': None, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:05:17.832 | INFO     | __main__:node_fn:237 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:05:17.832 | INFO     | __main__:node_fn:255 - [动态节点:GLUE] 返回: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:05:17.834 | INFO     | __main__:execute_dag:367 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:05:17.835 | INFO     | __main__:execute_dag:368 - [execute_dag] DAG 执行耗时: 1.22 秒
2025-07-18 16:05:17.835 | INFO     | __main__:run:489 - [Agent] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:05:17.835 | INFO     | __main__:run:490 - [Agent] DAG 执行耗时: 1.22 秒
2025-07-18 16:05:17.835 | INFO     | __main__:run:493 - [Agent] 总耗时: 1.24 秒
2025-07-18 16:05:17.835 | INFO     | __main__:output_result:378 - [output_result] 最终产物: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:51:09.522 | INFO     | __main__:run:401 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:51:09.523 | INFO     | __main__:run:470 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:51:09.536 | INFO     | __main__:run:483 - [Agent] 构建 DAG 完成
2025-07-18 16:51:09.536 | INFO     | __main__:execute_dag:356 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'final_content': None, 'chart': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:51:09.536 | INFO     | __main__:execute_dag:359 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:51:09.541 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:51:09.541 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:51:10.041 | INFO     | __main__:node_fn:305 - [动态节点:outline_generator] 返回: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:51:10.042 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:51:10.043 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:51:10.344 | INFO     | __main__:node_fn:305 - [动态节点:outline_splitter] 返回: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:51:10.345 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:51:10.345 | ERROR    | __main__:node_fn:308 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:51:10.346 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:51:10.347 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:51:10.748 | INFO     | __main__:node_fn:305 - [动态节点:chart_generator] 返回: {'_globals': {'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:51:10.750 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:51:10.751 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:51:10.751 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:51:10.752 | INFO     | __main__:execute_dag:368 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:51:10.753 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行耗时: 1.22 秒
2025-07-18 16:51:10.753 | INFO     | __main__:run:490 - [Agent] DAG 执行结束，最终 state: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:51:10.754 | INFO     | __main__:run:491 - [Agent] DAG 执行耗时: 1.22 秒
2025-07-18 16:51:10.754 | INFO     | __main__:run:494 - [Agent] 总耗时: 1.23 秒
2025-07-18 16:51:10.754 | INFO     | __main__:output_result:379 - [output_result] 最终产物: {'_globals': {'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:52:36.775 | INFO     | __main__:run:401 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:52:36.776 | INFO     | __main__:run:470 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:52:36.789 | INFO     | __main__:run:483 - [Agent] 构建 DAG 完成
2025-07-18 16:52:36.790 | INFO     | __main__:execute_dag:356 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'chart': None, 'final_content': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:52:36.790 | INFO     | __main__:execute_dag:359 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:52:36.796 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'final_content': None, 'outline': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:52:36.796 | ERROR    | __main__:node_fn:219 - ---user_input --- None --- {'chart': None, 'final_content': None, 'outline': None, 'content_parts': None}
2025-07-18 16:52:36.796 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:52:37.298 | INFO     | __main__:node_fn:305 - [动态节点:outline_generator] 返回: {'_globals': {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:52:37.300 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:52:37.300 | ERROR    | __main__:node_fn:219 - ---outline --- {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'} --- {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}
2025-07-18 16:52:37.301 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:52:37.602 | INFO     | __main__:node_fn:305 - [动态节点:outline_splitter] 返回: {'_globals': {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:52:37.604 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:52:37.605 | ERROR    | __main__:node_fn:219 - ---sections --- None --- {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': None}
2025-07-18 16:52:37.606 | ERROR    | __main__:node_fn:308 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:52:37.607 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:52:37.608 | ERROR    | __main__:node_fn:219 - ---user_input --- None --- {'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:52:37.608 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:52:38.008 | INFO     | __main__:node_fn:305 - [动态节点:chart_generator] 返回: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:52:38.011 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:52:38.012 | ERROR    | __main__:node_fn:219 - ---content_parts --- [Fallback] content_generator 节点失败: 'content' --- {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:52:38.012 | ERROR    | __main__:node_fn:219 - ---chart --- {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'} --- {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:52:38.013 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:52:38.013 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:52:38.015 | INFO     | __main__:execute_dag:368 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:52:38.018 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行耗时: 1.23 秒
2025-07-18 16:52:38.018 | INFO     | __main__:run:490 - [Agent] DAG 执行结束，最终 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:52:38.018 | INFO     | __main__:run:491 - [Agent] DAG 执行耗时: 1.23 秒
2025-07-18 16:52:38.018 | INFO     | __main__:run:494 - [Agent] 总耗时: 1.24 秒
2025-07-18 16:52:38.018 | INFO     | __main__:output_result:379 - [output_result] 最终产物: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:53:58.371 | INFO     | __main__:run:401 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:53:58.372 | INFO     | __main__:run:470 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:53:58.385 | INFO     | __main__:run:483 - [Agent] 构建 DAG 完成
2025-07-18 16:53:58.385 | INFO     | __main__:execute_dag:356 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:53:58.386 | INFO     | __main__:execute_dag:359 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:53:58.390 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:53:58.391 | ERROR    | __main__:node_fn:219 - ---user_input --- None --- {'content_parts': None, 'chart': None, 'final_content': None, 'outline': None} -- {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:53:58.391 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:53:58.892 | INFO     | __main__:node_fn:305 - [动态节点:outline_generator] 返回: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:53:58.895 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:53:58.896 | ERROR    | __main__:node_fn:219 - ---outline --- {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'} --- {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}} -- {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:53:58.897 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:53:59.199 | INFO     | __main__:node_fn:305 - [动态节点:outline_splitter] 返回: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:53:59.201 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:53:59.202 | ERROR    | __main__:node_fn:219 - ---sections --- None --- {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}} -- {'_globals': {'content_parts': None, 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:53:59.202 | ERROR    | __main__:node_fn:308 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:53:59.204 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:53:59.204 | ERROR    | __main__:node_fn:219 - ---user_input --- None --- {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}} -- {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': None, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:53:59.205 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:53:59.607 | INFO     | __main__:node_fn:305 - [动态节点:chart_generator] 返回: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:53:59.609 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:53:59.610 | ERROR    | __main__:node_fn:219 - ---content_parts --- [Fallback] content_generator 节点失败: 'content' --- {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}} -- {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:53:59.610 | ERROR    | __main__:node_fn:219 - ---chart --- {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'} --- {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}} -- {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:53:59.611 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:53:59.611 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:53:59.613 | INFO     | __main__:execute_dag:368 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:53:59.614 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行耗时: 1.23 秒
2025-07-18 16:53:59.614 | INFO     | __main__:run:490 - [Agent] DAG 执行结束，最终 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:53:59.615 | INFO     | __main__:run:491 - [Agent] DAG 执行耗时: 1.23 秒
2025-07-18 16:53:59.615 | INFO     | __main__:run:494 - [Agent] 总耗时: 1.24 秒
2025-07-18 16:53:59.615 | INFO     | __main__:output_result:379 - [output_result] 最终产物: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:55:59.497 | INFO     | __main__:run:402 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:55:59.497 | INFO     | __main__:run:471 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:55:59.511 | INFO     | __main__:run:484 - [Agent] 构建 DAG 完成
2025-07-18 16:55:59.511 | INFO     | __main__:execute_dag:357 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'content_parts': None, 'outline': None, 'final_content': None, 'chart': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:55:59.512 | INFO     | __main__:execute_dag:360 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:55:59.516 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'content_parts': None, 'outline': None, 'final_content': None, 'chart': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:55:59.516 | INFO     | __main__:node_fn:297 - [动态节点:outline_generator] 调用工具: outline_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 16:55:59.516 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:56:00.018 | INFO     | __main__:node_fn:306 - [动态节点:outline_generator] 返回: {'_globals': {'content_parts': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:56:00.019 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'content_parts': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:56:00.020 | INFO     | __main__:node_fn:297 - [动态节点:outline_splitter] 调用工具: outline_splitter，参数: {'input_text': "{'data': '# LangGraph 技术文档\\n        \\n        ## 1. 核心概念\\n        - 状态图(StateGraph)\\n        - 节点(Node)\\n        - 边(Edge)\\n        \\n        ## 2. 使用场景\\n        - 任务编排\\n        - 数据处理流水线\\n        - 决策流程\\n        \\n        ## 3. 高级特性\\n        - 并发执行\\n        - 错误处理\\n        - 条件分支', 'status': 'success'}"}
2025-07-18 16:56:00.021 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:56:00.322 | INFO     | __main__:node_fn:306 - [动态节点:outline_splitter] 返回: {'_globals': {'content_parts': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:56:00.325 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'content_parts': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:56:00.326 | INFO     | __main__:node_fn:297 - [动态节点:content_generator] 调用工具: content_generator，参数: {'input_text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:56:00.326 | ERROR    | __main__:node_fn:309 - [动态节点:content_generator] 工具调用失败: 'content'
2025-07-18 16:56:00.327 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': None}, 'text': "[Fallback] content_generator 节点失败: 'content'", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'"}
2025-07-18 16:56:00.327 | INFO     | __main__:node_fn:297 - [动态节点:chart_generator] 调用工具: chart_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 16:56:00.327 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:56:00.730 | INFO     | __main__:node_fn:306 - [动态节点:chart_generator] 返回: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:56:00.734 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:56:00.735 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:56:00.736 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:56:00.737 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:56:00.738 | INFO     | __main__:execute_dag:370 - [execute_dag] DAG 执行耗时: 1.23 秒
2025-07-18 16:56:00.738 | INFO     | __main__:run:491 - [Agent] DAG 执行结束，最终 state: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:56:00.738 | INFO     | __main__:run:492 - [Agent] DAG 执行耗时: 1.23 秒
2025-07-18 16:56:00.738 | INFO     | __main__:run:495 - [Agent] 总耗时: 1.24 秒
2025-07-18 16:56:00.739 | INFO     | __main__:output_result:380 - [output_result] 最终产物: {'_globals': {'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': "[Fallback] content_generator 节点失败: 'content'", 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "[Fallback] content_generator 节点失败: 'content'\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:57:42.270 | INFO     | __main__:run:402 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 16:57:42.271 | INFO     | __main__:run:471 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 16:57:42.284 | INFO     | __main__:run:484 - [Agent] 构建 DAG 完成
2025-07-18 16:57:42.296 | INFO     | __main__:execute_dag:357 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'chart': None, 'outline': None, 'final_content': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:57:42.296 | INFO     | __main__:execute_dag:360 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 16:57:42.301 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'outline': None, 'final_content': None, 'content_parts': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 16:57:42.301 | INFO     | __main__:node_fn:297 - [动态节点:outline_generator] 调用工具: outline_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 16:57:42.301 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 16:57:42.803 | INFO     | __main__:node_fn:306 - [动态节点:outline_generator] 返回: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:57:42.805 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 16:57:42.805 | INFO     | __main__:node_fn:297 - [动态节点:outline_splitter] 调用工具: outline_splitter，参数: {'input_text': "{'data': '# LangGraph 技术文档\\n        \\n        ## 1. 核心概念\\n        - 状态图(StateGraph)\\n        - 节点(Node)\\n        - 边(Edge)\\n        \\n        ## 2. 使用场景\\n        - 任务编排\\n        - 数据处理流水线\\n        - 决策流程\\n        \\n        ## 3. 高级特性\\n        - 并发执行\\n        - 错误处理\\n        - 条件分支', 'status': 'success'}"}
2025-07-18 16:57:42.806 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 16:57:43.106 | INFO     | __main__:node_fn:306 - [动态节点:outline_splitter] 返回: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:57:43.108 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:57:43.109 | INFO     | __main__:node_fn:297 - [动态节点:content_generator] 调用工具: content_generator，参数: {'input_text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 16:57:43.109 | INFO     | mock:content_generator:48 - [Mock] content_generator 收到 3 个章节
2025-07-18 16:57:43.711 | INFO     | __main__:node_fn:306 - [动态节点:content_generator] 返回: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}
2025-07-18 16:57:43.713 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'chart': None, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}
2025-07-18 16:57:43.714 | INFO     | __main__:node_fn:297 - [动态节点:chart_generator] 调用工具: chart_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 16:57:43.714 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 16:57:44.116 | INFO     | __main__:node_fn:306 - [动态节点:chart_generator] 返回: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:57:44.118 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 16:57:44.119 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:57:44.120 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:57:44.121 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:57:44.122 | INFO     | __main__:execute_dag:370 - [execute_dag] DAG 执行耗时: 1.83 秒
2025-07-18 16:57:44.123 | INFO     | __main__:run:491 - [Agent] DAG 执行结束，最终 state: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 16:57:44.123 | INFO     | __main__:run:492 - [Agent] DAG 执行耗时: 1.83 秒
2025-07-18 16:57:44.124 | INFO     | __main__:run:495 - [Agent] 总耗时: 1.85 秒
2025-07-18 16:57:44.124 | INFO     | __main__:output_result:380 - [output_result] 最终产物: {'_globals': {'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 17:02:02.355 | INFO     | __main__:run:402 - [Agent] 开始 run，query: 请写一篇关于LangGraph的文章
2025-07-18 17:02:02.355 | INFO     | __main__:run:471 - [Agent] 编排得到 plan: {'nodes': [{'name': 'generate_outline', 'tool': 'outline_generator', 'desc': '生成关于LangGraph的文章大纲', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'outline', 'store_to_globals': ['outline']}, {'name': 'split_outline', 'tool': 'outline_splitter', 'desc': '解析Markdown大纲，拆分为二级大纲及其内容列表', 'input_map': {'input_text': {'from': 'outline', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'sections', 'store_to_globals': []}, {'name': 'generate_content', 'tool': 'content_generator', 'desc': '根据二级大纲生成详细的Markdown正文片段', 'input_map': {'input_text': {'from': 'sections', 'batch': True, 'concurrent': True}}, 'output_field': 'content_parts', 'store_to_globals': ['content_parts']}, {'name': 'generate_chart', 'tool': 'chart_generator', 'desc': '生成适合的Markdown表格，展示LangGraph的核心特性', 'input_map': {'input_text': {'from': 'user_input', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'chart', 'store_to_globals': ['chart']}, {'name': 'combine_content', 'desc': '合并所有生成的内容和图表', 'input_map': {'content_parts': {'from': 'content_parts', 'transform': 'join', 'batch': False, 'concurrent': False}, 'chart': {'from': 'chart', 'transform': 'str', 'batch': False, 'concurrent': False}}, 'output_field': 'final_content', 'store_to_globals': ['final_content']}], 'edges': [{'from': 'generate_outline', 'to': 'split_outline'}, {'from': 'split_outline', 'to': 'generate_content'}, {'from': 'generate_content', 'to': 'generate_chart'}, {'from': 'generate_chart', 'to': 'combine_content'}], 'entry': 'generate_outline', 'finish': 'combine_content'}
2025-07-18 17:02:02.369 | INFO     | __main__:run:484 - [Agent] 构建 DAG 完成
2025-07-18 17:02:02.369 | INFO     | __main__:execute_dag:357 - [execute_dag] 开始执行 DAG，初始 state: {'_globals': {'outline': None, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 17:02:02.369 | INFO     | __main__:execute_dag:360 - [execute_dag] 调用 graph.ainvoke ...
2025-07-18 17:02:02.374 | INFO     | __main__:node_fn:208 - [动态节点:outline_generator] node_fn 收到的 state: {'_globals': {'outline': None, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': '请写一篇关于LangGraph的文章', 'user_input': '请写一篇关于LangGraph的文章'}
2025-07-18 17:02:02.374 | INFO     | __main__:node_fn:297 - [动态节点:outline_generator] 调用工具: outline_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 17:02:02.374 | INFO     | mock:outline_generator:11 - [Mock] outline_generator 收到输入: 请写一篇关于LangGraph的文章
2025-07-18 17:02:02.875 | INFO     | __main__:node_fn:306 - [动态节点:outline_generator] 返回: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 17:02:02.877 | INFO     | __main__:node_fn:208 - [动态节点:outline_splitter] node_fn 收到的 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}}
2025-07-18 17:02:02.878 | INFO     | __main__:node_fn:297 - [动态节点:outline_splitter] 调用工具: outline_splitter，参数: {'input_text': "{'data': '# LangGraph 技术文档\\n        \\n        ## 1. 核心概念\\n        - 状态图(StateGraph)\\n        - 节点(Node)\\n        - 边(Edge)\\n        \\n        ## 2. 使用场景\\n        - 任务编排\\n        - 数据处理流水线\\n        - 决策流程\\n        \\n        ## 3. 高级特性\\n        - 并发执行\\n        - 错误处理\\n        - 条件分支', 'status': 'success'}"}
2025-07-18 17:02:02.878 | INFO     | mock:outline_splitter:36 - [Mock] outline_splitter 收到输入: {'data': '# LangGraph 技术文档\n        \n        ## 1...
2025-07-18 17:02:03.180 | INFO     | __main__:node_fn:306 - [动态节点:outline_splitter] 返回: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 17:02:03.181 | INFO     | __main__:node_fn:208 - [动态节点:content_generator] node_fn 收到的 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': None, 'chart': None}, 'text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 17:02:03.182 | INFO     | __main__:node_fn:297 - [动态节点:content_generator] 调用工具: content_generator，参数: {'input_text': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}}
2025-07-18 17:02:03.182 | INFO     | mock:content_generator:48 - [Mock] content_generator 收到 3 个章节
2025-07-18 17:02:03.784 | INFO     | __main__:node_fn:306 - [动态节点:content_generator] 返回: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': None}, 'text': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}
2025-07-18 17:02:03.786 | INFO     | __main__:node_fn:208 - [动态节点:chart_generator] node_fn 收到的 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': None}, 'text': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}}
2025-07-18 17:02:03.787 | INFO     | __main__:node_fn:297 - [动态节点:chart_generator] 调用工具: chart_generator，参数: {'input_text': '请写一篇关于LangGraph的文章'}
2025-07-18 17:02:03.787 | INFO     | mock:chart_generator:63 - [Mock] chart_generator 收到输入: 请写一篇关于LangGraph的文章...
2025-07-18 17:02:04.188 | INFO     | __main__:node_fn:306 - [动态节点:chart_generator] 返回: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 17:02:04.191 | INFO     | __main__:node_fn:208 - [动态节点:None] node_fn 收到的 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': None, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}
2025-07-18 17:02:04.192 | INFO     | __main__:node_fn:238 - [动态节点:GLUE] 聚合节点，直接聚合参数: {'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': "{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 17:02:04.193 | INFO     | __main__:node_fn:256 - [动态节点:GLUE] 返回: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 17:02:04.195 | INFO     | __main__:execute_dag:369 - [execute_dag] DAG 执行结束，最终 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 17:02:04.197 | INFO     | __main__:execute_dag:370 - [execute_dag] DAG 执行耗时: 1.83 秒
2025-07-18 17:02:04.197 | INFO     | __main__:run:491 - [Agent] DAG 执行结束，最终 state: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
2025-07-18 17:02:04.198 | INFO     | __main__:run:492 - [Agent] DAG 执行耗时: 1.83 秒
2025-07-18 17:02:04.198 | INFO     | __main__:run:495 - [Agent] 总耗时: 1.84 秒
2025-07-18 17:02:04.198 | INFO     | __main__:output_result:380 - [output_result] 最终产物: {'_globals': {'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}}, 'text': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}", 'user_input': '请写一篇关于LangGraph的文章', 'outline': {'data': '# LangGraph 技术文档\n        \n        ## 1. 核心概念\n        - 状态图(StateGraph)\n        - 节点(Node)\n        - 边(Edge)\n        \n        ## 2. 使用场景\n        - 任务编排\n        - 数据处理流水线\n        - 决策流程\n        \n        ## 3. 高级特性\n        - 并发执行\n        - 错误处理\n        - 条件分支', 'status': 'success'}, 'sections': {'data': [{'title': '核心概念', 'content': ['状态图(StateGraph)', '节点(Node)', '边(Edge)']}, {'title': '使用场景', 'content': ['任务编排', '数据处理流水线', '决策流程']}, {'title': '高级特性', 'content': ['并发执行', '错误处理', '条件分支']}], 'status': 'success'}, 'content_parts': {'data': ['## 核心概念\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 使用场景\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...', '## 高级特性\n\n- title: 这是关于title的详细说明...\n- content: 这是关于content的详细说明...'], 'status': 'success'}, 'chart': {'data': '| 特性        | 说明                      | 示例场景          |\n        |-------------|---------------------------|-------------------|\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}, 'final_content': "{'data': ['## 核心概念\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 使用场景\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...', '## 高级特性\\n\\n- title: 这是关于title的详细说明...\\n- content: 这是关于content的详细说明...'], 'status': 'success'}\n{'data': '| 特性        | 说明                      | 示例场景          |\\n        |-------------|---------------------------|-------------------|\\n        | 状态图      | 管理执行流程              | 多步骤任务编排    |\\n        | 并发执行    | 提高吞吐量                | 批量数据处理      |\\n        | 条件分支    | 动态路由                  | 决策流程          |', 'status': 'success'}"}
